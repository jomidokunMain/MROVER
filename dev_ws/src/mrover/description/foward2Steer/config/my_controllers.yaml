controller_manager:
  ros__parameters:
    update_rate: 30
    # use_sim_time: true

    joint_broad:
      type: joint_state_broadcaster/JointStateBroadcaster
      publish_rate: 50.0

    bicycle_steering_controller:
      type: ackermann_steering_controller/AckermannSteeringController
 
bicycle_steering_controller:
  ros__parameters:
    rear_wheel_name: "virtual_rear_wheel_joint"
    front_steer_name: "virtual_front_wheel_joint"
    publish_rate: 50.0
    virtual_rear_wheels: ['rear_right_wheel_joint', 'rear_left_wheel_joint']
    virtual_front_wheels: ['front_right_steering_joint', 'front_left_steering_joint']
    virtual_front_steers: ['front_right_steering_joint', 'front_left_steering_joint']
    enable_ackermann_link : true
    wheel_separation_h : 0.8
    wheel_separation_w : 0.8
    wheel_radius: 0.1397
    enable_odom_tf: true
    open_loop: true
    gains:
      rear_right_wheel_joint:
          p: 100000.0
          d: 10.0
          i: 0.50
          i_clamp: 3.0
      rear_left_wheel_joint:
          p: 100000.0
          d: 10.0
          i: 0.50
          i_clamp: 3.0
    # Odometry calibration and tuning
    wheel_separation_h_multiplier: 1.0  # default: 1.0
    wheel_radius_multiplier: 1.0        # default: 1.0
    steer_pos_multiplier: 1.0           # default: 1.0

    # Odometry covariances for the encoder output of the robot.
    # pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    # twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

    # Top level frame (link) of the robot description
    base_frame_id: 'base_link'

    # Transform from odom -> base_link
    enable_odom_tf: true
    odom_frame_id: '/odom'

    # Set to false if the motor driver provides velocity data. 
    estimate_velocity_from_position: true

    # Commands
    publish_cmd: true
    allow_multiple_cmd_vel_publishers: false

    # Velocity and acceleration limits for the robot
    linear:
        x:
            has_velocity_limits    : true
            max_velocity           : 10.0   # m/s
            has_acceleration_limits: true
            max_acceleration       : 2.0    # m/s^2
    angular:
        z:
            has_velocity_limits    : true
            max_velocity           : 3.0   # rad/s
            has_acceleration_limits: true
            max_acceleration       : 3.0    # rad/s^2




# joint_broad:
#   ros__parameters: