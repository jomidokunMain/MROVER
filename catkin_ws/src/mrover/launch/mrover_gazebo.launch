<?xml version="1.0"?>
<launch>
    <!-- Launch the Gazebo simulator -->
    <arg name="model" default="$(find mrover)/description/steer_rover/robot_core2.urdf.xacro"/>
    <arg name="namespace" default="" />
     <!-- Declare an argument for the world file -->
    <arg name="world_file" default="$(find mrover)/worlds/obstacle.world" />

    <!-- <arg name="world_name" default="worlds/empty_world" /> -->
    <arg name="cmd_timeout" default="0.5"/>
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0"/>
    <arg name="roll" default="0"/>
    <arg name="pitch" default="0"/>
    <arg name="yaw" default="0"/>

    <!-- <group ns="$(arg namespace)"> -->

    <!-- Load the robot description -->
    <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>
    <!--send ackerman plugin params to param server-->
    <rosparam file="$(find mrover)/config/ackermansteer.yaml" command="load"/>
    <rosparam  command="load" file="$(find mrover)/config/gains.yaml"/>
    <rosparam  command="load" file="$(find mrover)/config/ackermann_steer.yaml"/>
    <rosparam  command="load" file="$(find mrover)/config/joint_state_publisher.yaml"/>



    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="false"/>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" 
        type="robot_state_publisher" respawn="false" output="screen"/> -->

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/> -->

    <!-- Gazebo  -->
   <!-- Launch Gazebo -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_file)" />
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>
    <node pkg="controller_manager" type="spawner" name="controller_spawner" 
        args="joint_state_publisher mobile_base_controller"
        output="screen" respawn="false" >
        <remap from="/mobile_base_controller/odom" to="/odom"/>
        <remap from="/mobile_base_controller/cmd_vel" to="/cmd_vel"/>
     </node>


    <!-- Spawn the robot in Gazebo -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model model" />
    

    <!-- Load ros_controllers configuration parameters -->
    <!-- <rosparam  command="load" file="$(find mrover)/config/ackermansteer.yaml"/> -->
    <!-- <rosparam  command="load" file="$(find mrover)/config/gains.yaml"/> -->
    <!-- <rosparam  command="load" file="$(find mrover)/config/joint_state_publisher.yaml"/> -->
    <!-- <rosparam  command="load" file="$(find mrover)/config/ackermann_steer_sim.yaml"/> -->

    <!-- Spawn the controllers -->
    <!-- <node pkg="controller_manager" type="spawner" name="controller_spawner"
        args="joint_state_publisher ackermann_steering_bot_controller "
        output="screen" respawn="false" /> -->


    <!-- Launch  the robot state publisher -->
    <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
        <param name="publish_frequency" value="50.0"/>
    </node>
     -->

    <!-- Launch a rqt steering GUI for publishing to /steer_bot/steer_drive_controller/cmd_vel -->
    <!-- <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
        <param name="default_topic" value="/ackermann_steering_controller/cmd_vel"/>
    </node> -->
    <!-- <node name="ackermann_steering_controller_ackermann_steering_bot"
            pkg="ackermann_steering_controller"
            type="ackermann_steering_controller_ackermann_steering_bot">
        <remap from="/ackermann_steering_bot_controller/odom" to="/odom"/>
        <remap from="/ackermann_steering_bot_controller/cmd_vel" to="/cmd_vel"/>
    </node> -->
  <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
  <!-- <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -param robot_description -model robot
        -x $(arg x) -y $(arg y) -z $(arg z)
        -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/> -->

  <node pkg="joy" type="joy_node" name="joy_node0">
      <param name="dev" value="/dev/input/js0"/>
  </node>
  <node pkg="teleop_twist_joy" type="teleop_node" name="teleop_twist_joy">
    <rosparam command="load" file="$(find mrover)/config/joystic_param.yaml" />
  </node>
  <node name="rviz" pkg="rviz" type="rviz" required="true" args="-d $(find mrover)/rviz/mrover_lidar.rviz">
  </node>


    <!-- Spawn robot in Gazebo -->
    <!-- <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param robot_description -model robot
            -gazebo_namespace /gazebo
            -x $(arg x) -y $(arg y) -z $(arg z)
            -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"
        respawn="false" output="screen" /> -->



</launch>