<launch>
  <!-- Define Mavros parameters -->
  <arg name="fcu_url" default="/dev/ttyACM0:57600"/>
  <arg name="gcs_url" default="udp://@localhost:14550" />   
  <arg name="tgt_system" default="1" />
  <arg name="tgt_component" default="1" />
  <arg name="log_output" default="screen" />
	<arg name="fcu_protocol" default="v2.0" />
	<arg name="respawn_mavros" default="false" />
  <arg name="command_input" default="2" />
  <arg name="gazebo_simulation" default="true" />
  <arg name="visualization" default="true"/>


  <!-- vehicle model and world -->
    <!-- Start add vehicle -->
  <param name="robot_description"
      command="$(find xacro)/xacro '$(find mrover)/description/steer_rover/robot_core.urdf.xacro'" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- load configuration -->
  <rosparam command="load" file="$(find imu_sensor_controller)/imu_sensor_controller.yaml" />

    <!-- Load controller config -->
  <rosparam command="load" file="$(find mrover)/config/ackermann_steer.yaml" />

  <!-- Load ackermann_steering_bot config -->
  <rosparam command="load" file="$(find mrover)/config/ackermann_steer_sim.yaml" />
  <rosparam  command="load" file="$(find mrover)/config/joint_state_publisher.yaml"/>

  <!-- Start ackermann_steering_bot -->
  <node name="ackermann_steering_controller_ackermann_steering_bot"
        pkg="ackermann_steering_controller"
        type="ackermann_steering_controller_ackermann_steering_bot">
    <remap from="/ackermann_steering_bot_controller/odom" to="/odom"/>
    <remap from="/ackermann_steering_bot_controller/cmd_vel" to="/cmd_vel"/>
  </node>

    <!-- Spawn controller -->
  <node name="controller_spawner"
        pkg="controller_manager" type="spawner" output="screen"
        args="joint_state_publisher ackermann_steering_bot_controller" >
  </node>
  <node name="robot_hw_interface_node" pkg="mobile_robot_autonomous_navigation" type="robot_hw_interface_node" output="screen"/>
 

  <include file="$(find mavros)/launch/node.launch">
      <arg name="pluginlists_yaml" value="$(find mrover)/config/px4_pluginlists.yaml" />
      <arg name="config_yaml" value="$(find mrover)/config/px4_config.yaml" />
      <!-- <arg name="config_yaml" value="$(find mrover)/config/px4_config_imu.yaml" /> -->
      <arg name="fcu_url" value="$(arg fcu_url)" />
      <arg name="gcs_url" value="$(arg gcs_url)" />
      <arg name="tgt_system" value="$(arg tgt_system)" />
      <arg name="tgt_component" value="$(arg tgt_component)" />
  </include>

  <!-- <node pkg="mrover" type="topic_encode.py" name="topic_encode">
  </node> -->


  <!-- Launch Joystick node -->

  <!-- <node pkg="mrover" type="joystick_translatior_mrover.py" name="joystick_translatior_mrover">
  </node> -->
  <node pkg="mrover" type="convert_vel_alt.py" name="converter_vel_alt">
  </node>
  <!-- Run two joy nodes publishing to the same topic, just to cover two possible joystick locations -->
  <node pkg="joy" type="joy_node" name="joy_node0">
      <param name="dev" value="/dev/input/js0"/>
  </node>

  <node pkg="teleop_twist_joy" type="teleop_node" name="teleop_twist_joy">
    <rosparam command="load" file="$(find mrover)/config/joystic_param.yaml" />
  </node>
  
  
  <!-- Add Lidar -->
  <include file="$(find ydlidar_ros_driver)/launch/G6_G7.launch" />
  <!-- Add Camera -->
  <!-- <include file="$(find v4l2_camera)/launch/v4l2_camera.launch" >
    <node name="v4l2_camera" pkg="v4l2_camera" type="v4l2_camera" output="screen" args="/dev/video">
      <param name="device" type="string" value="/dev/video0" />
      <param name="camera_info" type="string" value="$(arg config_file)" />
      <param name="camera_frame" value="camera_optical_link" type="string" />
      <remap from="image" to="/image_raw"/>
      <rosparam command="load" file="$(arg config_file)" />
    </node>
  </include> -->
  <!-- <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" output="screen"/> -->
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video2" />
    <param name="image_width" value="1280" />
    <param name="image_height" value="720" />
    <param name="pixel_format" value="yuyv" />
    <param name="color_format" value="yuv422p" />
    <param name="camera_frame_id" value="camera_optical_link" />
    <param name="io_method" value="mmap"/>
    <remap from="/usb_cam/image_raw" to="/image_raw"/>
  </node>
  <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/image_raw"/>
    <param name="autosize" value="true" />
  </node>
   <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_odom" output="screen">
    <param name="config_file" value="$(find mrover)/config/ekf_se_odom.yaml"/>
  </node>
  <node name="arduino_node" pkg="rosserial_python" type="serial_node.py" output="screen">
      <param name="port" value="/dev/ttyUSB0"/> <!-- Adjust the port as per your Arduino connection -->
      <param name="baud" value="115200"/>     <!-- Adjust baud rate if needed -->
  </node>

  <!-- <node pkg="rosserial_python" type="serial_node.py" name="rosserial_arduino" output="screen">
    <param name="serial_port" value="/dev/ttyUSB0"/> 
    <param name="serial_baudrate" value="9600"/>  
  </node> -->

 
  <node name="rviz" pkg="rviz" type="rviz" required="true" args="-d $(find mrover)/rviz/mrover_lidar.rviz">
    <!-- <remap from="/odom" to="/odom_demo"/> -->
  </node>

</launch>
